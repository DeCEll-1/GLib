modID,fieldID,fieldName,fieldType,defaultValue,secondaryValue,fieldDescription,minValue,maxValue,tab
shaderLib,graphicsLibHeader,GraphicsLib Header,Header,GraphicsLib,,,,,
shaderLib,enableShaders,Enable Shaders,Boolean,TRUE,,"Master control setting for all shaders (including the Lighting Engine). GraphicsLib's shaders do nothing and have no performance/VRAM impact with this setting turned off. This option by itself typically costs between 33 and 267 MiB of VRAM, depending on the game's resolution.",,,
shaderLib,aaCompatMode,Anti-Aliasing Compatibility Mode,Boolean,FALSE,,"Allows GraphicsLib to start even if you have antialiasing enabled. This option also disables the second pass of the post processing shader. The combat interface and the campaign environment will remain sharp, but in-combat ships/weapons/effects will not have antialiasing (they will appear blurrier than usual).",,,
shaderLib,use64BitBuffer,Use 64-Bit Auxiliary Buffer,Boolean,FALSE,,"This causes various usages of the auxiliary texture buffer to be more accurate, which can improve the appearance of distortion effects and normal maps. Typically costs between 11 and 85 MiB of VRAM, depending on the game's resolution. Can impact performance for some low-end graphics devices.",,,
shaderLib,extraScreenClear,Extra Screen Clear,Boolean,TRUE,,"This clears the frame buffer an extra time, which can lead to cleaner behavior. Can impact performance for some low-end graphics devices.",,,
shaderLib,toggleKey,Toggle Keybind,Keycode,197,,Changes the Keybind used to globally toggle rendering of all shaders.,,,
shaderLib,reloadKey,Reload Keybind,Keycode,68,,Changes the Keybind used to forcibly reload all shaders. Does not reload textures.,,,
shaderLib,debugLevel,Debug Logging,Radio,Disabled,"Disabled, Log w/o Stack Trace, Log Unique Stack Traces, Log All Stack Traces",Sets the detail level of OpenGL debug/error logging. See starsector.log for the output of these log messages. Requires an OpenGL 4.3-capable graphics driver. Can impact performance.,,,
shaderLib,lightsHeader,Lighting Header,Header,Lighting Engine,,,,,Lighting
shaderLib,lightsText,Description,Text,"This shader adds a dynamic lighting engine into the game, allowing bright sources of light to reflect off of the contours of objects (such as ships). Vanilla Starsector ships, weapons, etc. are supported by default, but mods are largely responsible for providing support for lighting.",,,,,Lighting
shaderLib,enableLights,Enable Lighting Engine,Boolean,TRUE,,The lighting engine is resource-demanding. This option has negligible VRAM impact on its own.,,,Lighting
shaderLib,preloadAllMaps,Preload All Maps,Boolean,FALSE,,"Preloads all material, normal, and surface maps. With no other mods enabled, this option costs up to about 250 MiB of VRAM, depending on settings. However, with extra mods added in, there is no upper limit! With a large mod list, this option can be *extremely* VRAM-intensive! Provided that you have sufficient VRAM, this option avoids pauses before combat and (on rare occasions) hitching during combat as textures load in.",,,Lighting
shaderLib,enableNormal,Load Normal Maps,Boolean,TRUE,,"Loads normals maps, which define sprite contours and three-dimensional shape. Enabling this option has a moderate performance impact. This option typically costs between 10 and 80 MiB of VRAM, depending on the game's resolution, plus (if ""Preload All Maps"" is disabled) a variable amount of additional VRAM depending on the size and variety of the fleets involved in the battle (up to about 30 MiB under normal conditions).",,,Lighting
shaderLib,autoGenNormals,Automatically Generate Normal Maps,Boolean,TRUE,,"Automatically generates basic normal maps for sprites that lack a custom mod-defined normal map. Generated normal maps are cached in the ""GraphicsLib/cache"" folder. The cache is regenerated whenever the mod list changes. This option typically has no performance or VRAM impacts, but it can dramatically increase VRAM usage if ""Preload All Maps"" is enabled.",,,Lighting
shaderLib,loadMaterial,Load Material Maps,Boolean,TRUE,,"Loads material maps, which control sprite reflectivity, improving the overall look and feel of lighting effects. This option has no direct performance impact, but costs (if ""Preload All Maps"" is disabled) a variable amount of VRAM depending on the size and variety of the fleets involved in the battle (up to about 30 MiB under normal conditions).",,,Lighting
shaderLib,loadSurface,Load Surface Maps,Boolean,TRUE,,"Loads surface maps, which control specular highlight hardness and intensity, enhancing lighting quality if normal mapping is also enabled. Enabling this option has a moderate performance impact. This option costs (if ""Preload All Maps"" is disabled) a variable amount of VRAM depending on the size and variety of the fleets involved in the battle (up to about 30 MiB under normal conditions).",,,Lighting
shaderLib,enableBloom,Enable Bloom,Boolean,TRUE,,"Makes highlights and bright reflections look brighter by simulating light ""spillage"" from pixels that are illuminated beyond the luminosity permitted by the game's color space. This option has a low performance impact for modern GPUs, but typically costs between 19 to 304 MiB of VRAM, depending on the game's resolution and the ""Bloom Subdivision"" setting.",,,Lighting
shaderLib,bloomQuality,Bloom Quality,Int,5,,"Controls the number of samples that the bloom shader takes per pixel. Higher values mean more samples; Quality 1 is 10 samples per pixel, while Quality 5 is 26 samples per pixel. Visually, this increases the quality of the bloom effect and increases its visual size (but not its apparent intensity). Low performance impact for modern GPUs.",1,5,Lighting
shaderLib,bloomMips,Bloom Subdivision,Int,2,,"Controls the resolution divider of the bloom shader. Higher values mean more subdivision; a value of 1 means the bloom effect uses the same resolution as the game, while a value of 5 means the bloom effect has a resolution 16 times smaller than the game resolution (before being stretched out to fill the screen). Visually, this makes the bloom effect larger and more intense, but can cause shimmering. Low performance impact for modern GPUs.",1,5,Lighting
shaderLib,maximumLights,Maximum Lights,Int,100,,The number of lights that can be drawn onscreen at the same time. Low values may cause noticeable pop-in when some lights get skipped in favor of others. Low performance impact for modern GPUs; high values may stress older GPUs or integrated graphics.,1,372,Lighting
shaderLib,maximumLineLights,Maximum Beam Lights,Int,50,,"The number of line-shaped lights (primarily beam weapons) that can be drawn onscreen at the same time. Low performance impact for modern GPUs; high values may stress older GPUs or integrated graphics, particularly because these lights are more computationally expensive than other types of lights.",1,372,Lighting
shaderLib,optimizeNormals,Skip Dead Hulls,Boolean,FALSE,,"Skips rendering normal and surface maps for dead ships/fighters, which can dramatically improve performance for some systems, at the cost of occasionally wonky visuals.",,,Lighting
shaderLib,lightsAdjustmentsHeader,Lighting Adjustments Header,Header,Visual Adjustments,,,,,Lighting
shaderLib,lightsAdjustmentText,Description,Text,"These options adjust the overall appearance of lighting effects, but largely have no performance impact.",,,,,Lighting
shaderLib,intensityScale,Light Intensity Scale,Double,50,,Globally scales the intensity (brightness) of all lights.,1,500,Lighting
shaderLib,sizeScale,Light Size Scale,Double,200,,Globally scales the size (attenuation) of all lights.,1,500,Lighting
shaderLib,lightDepth,Light Depth Scale,Double,20,,Controls the minimum ratio of light height to light size. Higher values mean normal mapped lighting will be more uniform and less dramatic.,0,200,Lighting
shaderLib,weaponFlashHeight,Weapon Flash Height,Double,50,,Defines the world height of lights spawned by firing weapons. This does not affect the apparent size of these lights. Higher values cause normal maps to appear to have less depth.,0,250,Lighting
shaderLib,weaponLightHeight,Weapon Light Height,Double,25,,"Defines the world height of lights spawned by projectiles, impacts, and beams. This does not affect the apparent size of these lights. Higher values cause normal maps to appear to have less depth.",0,250,Lighting
shaderLib,bloomIntensity,Bloom Intensity Scale,Double,50,,Controls the brightness of the bloom effect.,1,500,Lighting
shaderLib,bloomScale,Bloom Sampling Scale,Double,100,,"Controls the sampling width of the bloom effect's kernel. Higher values mean the bloom effect becomes visually larger, but sampling artifacts can occur.",50,300,Lighting
shaderLib,specularIntensity,Specular Intensity Scale,Double,250,,Globally scales the intensity of specular highlights.,1,1000,Lighting
shaderLib,specularHardness,Specular Hardness Scale,Double,85,,Globally scales the shininess/size of specular highlights. Higher values make for smaller specular highlights.,1,500,Lighting
shaderLib,normalFlatness,Normal Map Flatness,Double,0,,"Globally controls how flat or tall that each normal map appears. Values approaching 1 are increasingly flatter, with 1 having no contour whatsoever. Values below 0 are increasingly taller, expressing greater depth. The recommended value is 0.",-5,1,Lighting
shaderLib,fighterBrightnessScale,Fighter Light Scale,Double,100,,"Scales both the intensity and size of lights originating from fighters and drones. This setting is multiplicative with the ""Light Intensity Scale"" and ""Light Size Scale"" settings.",1,500,Lighting
shaderLib,defaultMaterialBrightness,Default Material Brightness,Double,80,,"If no material map is defined for an object, or if material maps are disabled, the base sprite is used instead. This setting controls the brightness of the base sprite when it is used in place of a custom material map. The default value is tuned to match the style of the material maps included with GraphicsLib. This setting has no effect on weapons and missiles.",0,100,Lighting
shaderLib,distortionHeader,Distortion Header,Header,Distortion Shader,,,,,Distortions
shaderLib,distortionText,Description,Text,"This shader allows screen distortion effects to be rendered, which permits mods to add special effects that appear to bend or warp space. The most prominent example of this is the ""Shield Ripples"" effect added by the Distortions Plugin.",,,,,Distortions
shaderLib,enableDistortion,Enable Distortion Shader,Boolean,TRUE,,Distortions are not resource-demanding. Costs at least 25 MiB of VRAM.,,,Distortions
shaderLib,useLargeRipple,Use Large Ripple Texture,Boolean,TRUE,,"Loads a 512x512 animated distortion ripple effect, costing about 60 MiB of VRAM. Disabling this option causes GraphicsLib to load a smaller 256x256 ripple effect (cost included above), which may decrease the visual quality of large distortions.",,,Distortions
shaderLib,maximumDistortions,Maximum Distortions,Int,100,,The number of distortion effects that can be drawn onscreen at the same time. Minimal performance impact.,1,500,Distortions
shaderLib,postProcessHeader,Post-Processing Header,Header,Post-Processing Shader,,,,,Post-Processing
shaderLib,postProcessText,Description,Text,This shader permits mods to add various basic effects that are overlaid upon the screen.,,,,,Post-Processing
shaderLib,enablePostProcess,Enable Post-Processing,Boolean,TRUE,,Post-processing is not resource-demanding. Negligible VRAM impact.,,,Post-Processing
shaderLib,colorBlindnessMode,Color Blindness Mode,Radio,None,"None, Protanomaly, Deuteranomaly, Tritanomaly, Protanopia, Deuteranopia, Tritanopia, Achromatopsia","Performs rudimentary color grading to make the game potentially easier to parse. Not recommended; Starsector presently has a built-in color blindness setting, which you should use instead.",,,Post-Processing
shaderLib,pluginsText,Description,Text,"These options concern graphics plugins that add additional effects to the game, but are not directly part of a specific shader.",,,,,Plugins
shaderLib,distortionsPluginHeader,Distortions Plugin Header,Header,Distortions Plugin,,,,,Plugins
shaderLib,enableShieldRipples,Enable Shield Ripples,Boolean,TRUE,,Renders a ripple-type distortion effect whenever a shield is hit by a projectile. Not resource-demanding.,,,Plugins
shaderLib,enableMjolnirRipples,Enable Mjolnir Ripples,Boolean,TRUE,,Causes space to warp inwards around Mjolnir projectiles. Not resource-demanding.,,,Plugins
shaderLib,shipExplosionPluginHeader,Ship Explosion Plugin Header,Header,Ship Explosion Effects Plugin,,,,,Plugins
shaderLib,enableExplosionEffects,Enhanced Explosion Flash,Radio,Enabled,"Disabled, Enabled, Extreme","Renders additional particle effects when a ship is destroyed. Extreme mode is tuned for earlier versions of Starsector, and is not recommended anymore. Not resource-demanding.",,,Plugins
shaderLib,enableExplosionShockwave,Enable Explosion Shockwave,Boolean,TRUE,,"Renders a ripple-type distortion effect when a ship is destroyed, making it look like the explosion generated a powerful shockwave. Not resource-demanding.",,,Plugins
shaderLib,explosionTrailScale,Drifting Hulk Trails,Double,100,,Renders a number of flaming trail effects after a ship is destroyed. Set to 0%% to disable this effect. A value of 100%% is recommended. Slightly resource-demanding.,0,300,Plugins
shaderLib,overloadArcsPluginHeader,Overload Arcs Plugin Header,Header,Overload Arcs Plugin,,,,,Plugins
shaderLib,enableOverloadArcs,Enable Overload Arcs,Boolean,TRUE,,Renders EMP arc flashes whenever a ship is overloading. Not resource-demanding.,,,Plugins
shaderLib,useVentColorsForOverloadArcs,Use Venting Colors,Boolean,FALSE,,"Colors the EMP arc flashes according to the color of the ship's flux vent texture. Normally, the EMP arc flashes use the same color as the overload overlay texture.",,,Plugins
shaderLib,weaponSmokePluginHeader,Weapon Smoke Plugin Header,Header,Weapon Smoke Plugin,,,,,Plugins
shaderLib,enableWeaponSmoke,Enable Weapon Damage Smoke,Boolean,TRUE,,Renders smoke trails that emit from disabled weapon systems. Mildly resource-demanding.,,,Plugins
shaderLib,insigniaPluginHeader,Insignia Plugin Header,Header,Insignia Plugin,,,,,Plugins
shaderLib,enableInsignias,Enable Officer Insignias,Boolean,TRUE,,"Renders a small icon near ships with officers, offering an at-a-glance indication of the officer level and flagship status. Not resource-demanding.",,,Plugins
shaderLib,lightInjectorPluginHeader,Light Injector Plugin Header,Header,Light Injector Plugin,,,,,Plugins
shaderLib,enableSunLight,Enable Sun Light,Boolean,TRUE,,"Creates light(s) if a star is present in the current star system in the campaign, appropriate for the number of stars, brightness of those stars, the fleet's proximity to them, etc. Only meaningful if the lighting engine is enabled. Mildly resource-demanding.",,,Plugins
shaderLib,enableHyperLight,Enable Hyperspace Light,Boolean,TRUE,,Creates a light if the player's fleet is fighting in hyperspace in the campaign. Only meaningful if the lighting engine is enabled. Mildly resource-demanding.,,,Plugins
shaderLib,generalPluginHeader,General Plugin Header,Header,General Plugin Settings,,,,,Plugins
shaderLib,drawOffscreenParticles,Draw Offscren Particles,Boolean,FALSE,,"Disables screen-space filtering to determine whether to draw particules spawned by these graphics plugins. Starsector has a particle limit, so leaving this option off will typically improve visual quality.",,,Plugins
